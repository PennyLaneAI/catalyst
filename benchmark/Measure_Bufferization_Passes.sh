start=$(date +%s.%N); for i in {1..1000};{../mlir/build/bin/quantum-opt 3_1_QuantumCompilationPass.mlir --one-shot-bufferize=dialect-filter=memref > /dev/null --mlir-disable-threading ;}; end=$(date +%s.%N); runtime=$(echo "($end - $start)" | bc); echo "Total runtime for $iterations iterations: $runtime seconds";
start=$(date +%s.%N); for i in {1..1000};{../mlir/build/bin/quantum-opt O32/3_2_1_one-shot-bufferize.mlir --inline > /dev/null --mlir-disable-threading ;}; end=$(date +%s.%N); runtime=$(echo "($end - $start)" | bc); echo "Total runtime for $iterations iterations: $runtime seconds";
start=$(date +%s.%N); for i in {1..1000};{../mlir/build/bin/quantum-opt O32/3_2_2_inline.mlir --gradient-bufferize > /dev/null --mlir-disable-threading ;}; end=$(date +%s.%N); runtime=$(echo "($end - $start)" | bc); echo "Total runtime for $iterations iterations: $runtime seconds";
start=$(date +%s.%N); for i in {1..1000};{../mlir/build/bin/quantum-opt O32/3_2_3_gradient-bufferize.mlir --scf-bufferize > /dev/null --mlir-disable-threading ;}; end=$(date +%s.%N); runtime=$(echo "($end - $start)" | bc); echo "Total runtime for $iterations iterations: $runtime seconds";
start=$(date +%s.%N); for i in {1..1000};{../mlir/build/bin/quantum-opt O32/3_2_4_scf-bufferize.mlir --convert-tensor-to-linalg > /dev/null --mlir-disable-threading ;}; end=$(date +%s.%N); runtime=$(echo "($end - $start)" | bc); echo "Total runtime for $iterations iterations: $runtime seconds";
start=$(date +%s.%N); for i in {1..1000};{../mlir/build/bin/quantum-opt O32/3_2_5_convert-tensor-to-linalg.mlir --convert-elementwise-to-linalg > /dev/null --mlir-disable-threading ;}; end=$(date +%s.%N); runtime=$(echo "($end - $start)" | bc); echo "Total runtime for $iterations iterations: $runtime seconds";
start=$(date +%s.%N); for i in {1..1000};{../mlir/build/bin/quantum-opt O32/3_2_6_convert-elementwise-to-linalg.mlir --arith-bufferize > /dev/null --mlir-disable-threading ;}; end=$(date +%s.%N); runtime=$(echo "($end - $start)" | bc); echo "Total runtime for $iterations iterations: $runtime seconds";
start=$(date +%s.%N); for i in {1..1000};{../mlir/build/bin/quantum-opt O32/3_2_7_arith-bufferize.mlir --empty-tensor-to-alloc-tensor > /dev/null --mlir-disable-threading ;}; end=$(date +%s.%N); runtime=$(echo "($end - $start)" | bc); echo "Total runtime for $iterations iterations: $runtime seconds";
start=$(date +%s.%N); for i in {1..1000};{../mlir/build/bin/quantum-opt O32/3_2_8_empty-tensor-to-alloc-tensor.mlir --bufferization-bufferize --tensor-bufferize > /dev/null --mlir-disable-threading ;}; end=$(date +%s.%N); runtime=$(echo "($end - $start)" | bc); echo "Total runtime for $iterations iterations: $runtime seconds";
start=$(date +%s.%N); for i in {1..1000};{../mlir/build/bin/quantum-opt O32/3_2_9_bufferization-bufferize.mlir --catalyst-bufferize > /dev/null --mlir-disable-threading ;}; end=$(date +%s.%N); runtime=$(echo "($end - $start)" | bc); echo "Total runtime for $iterations iterations: $runtime seconds";
start=$(date +%s.%N); for i in {1..1000};{../mlir/build/bin/quantum-opt O32/3_2_10_catalyst-bufferize.mlir --linalg-bufferize --tensor-bufferize > /dev/null --mlir-disable-threading ;}; end=$(date +%s.%N); runtime=$(echo "($end - $start)" | bc); echo "Total runtime for $iterations iterations: $runtime seconds";
start=$(date +%s.%N); for i in {1..1000};{../mlir/build/bin/quantum-opt O32/3_2_11_linalg-bufferize.mlir --quantum-bufferize > /dev/null --mlir-disable-threading ;}; end=$(date +%s.%N); runtime=$(echo "($end - $start)" | bc); echo "Total runtime for $iterations iterations: $runtime seconds";
start=$(date +%s.%N); for i in {1..1000};{../mlir/build/bin/quantum-opt O32/3_2_12_quantum-bufferize.mlir --func-bufferize > /dev/null --mlir-disable-threading ;}; end=$(date +%s.%N); runtime=$(echo "($end - $start)" | bc); echo "Total runtime for $iterations iterations: $runtime seconds";
start=$(date +%s.%N); for i in {1..1000};{../mlir/build/bin/quantum-opt O32/3_2_13_func-bufferize.mlir --finalizing-bufferize --buffer-hoisting --buffer-loop-hoisting --buffer-deallocation > /dev/null --mlir-disable-threading ;}; end=$(date +%s.%N); runtime=$(echo "($end - $start)" | bc); echo "Total runtime for $iterations iterations: $runtime seconds";
start=$(date +%s.%N); for i in {1..1000};{../mlir/build/bin/quantum-opt O32/3_2_14_finalizing-bufferize.mlir --convert-arraylist-to-memref > /dev/null --mlir-disable-threading ;}; end=$(date +%s.%N); runtime=$(echo "($end - $start)" | bc); echo "Total runtime for $iterations iterations: $runtime seconds";
start=$(date +%s.%N); for i in {1..1000};{../mlir/build/bin/quantum-opt O32/3_2_15_convert-arraylist-to-memref.mlir --convert-bufferization-to-memref > /dev/null --mlir-disable-threading ;}; end=$(date +%s.%N); runtime=$(echo "($end - $start)" | bc); echo "Total runtime for $iterations iterations: $runtime seconds";
start=$(date +%s.%N); for i in {1..1000};{../mlir/build/bin/quantum-opt O32/3_2_16_convert-bufferization-to-memref.mlir --canonicalize > /dev/null --mlir-disable-threading ;}; end=$(date +%s.%N); runtime=$(echo "($end - $start)" | bc); echo "Total runtime for $iterations iterations: $runtime seconds";
start=$(date +%s.%N); for i in {1..1000};{../mlir/build/bin/quantum-opt O32/3_2_17_canonicalize.mlir --cp-global-memref > /dev/null --mlir-disable-threading ;}; end=$(date +%s.%N); runtime=$(echo "($end - $start)" | bc); echo "Total runtime for $iterations iterations: $runtime seconds";
