name: Setup PATH for Self-Hosted MacOS Runner
description: This workflow sets up the workflow environment for the Self-Hosted MacOS runner. It should be the first step in workflows that use the runner.


inputs:
  python_version:
    type: string
    description: Version of Python being used by the Job
    required: true

outputs:
  python_version:
    description: 'The version of Python that was setup'
    value: ${{ steps.python_venv.outputs.python_path }}
  python_path:
    description: 'Full absolute path to the python binary'
    value: ${{ steps.python_venv.outputs.python_version }}


runs:
  using: composite
  steps:

    # These environment variables ensure multi-threading workloads (ex: pytest-xdist)
    # work without any issues. Without them, the tests take hours to complete.
    - name: Setup MacOS Env Vars
      run: |
        echo 'no_proxy=*' >> $GITHUB_ENV
        echo 'OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES' >> $GITHUB_ENV

    # These binaries are added to PATH as there were issues adding them by default on job start
    - name: Add additional binaries to PATH
      run: |
        additional_paths=("/opt/homebrew/bin" "$HOME/.pyenv/shims" "$HOME/.cargo/bin")
        for _path in ${additional_paths[@]};
        do
          [[ ":$PATH:" != *":$_path:"* ]] && echo "$_path" >> $GITHUB_PATH
        done
        echo "PYENV_ROOT=$HOME/.pyenv" >> $GITHUB_ENV

    - name: Setup Python ${{ inputs.python_version }}
      id: python_setup
      env:
        input_python_version: ${{ inputs.python_version }}
      run: |
        # Check if the requested Python version exists on the runner
        pyenv versions | grep -q "$input_python_version"
        
        if [ $? -ne 0 ]; then
          echo "Installing Python $input_python_version"
          pyenv install "$input_python_version"
        fi

    - name: Setup Python venv
      id: python_venv
      env:
        input_python_version: ${{ inputs.python_version }}
        venv_name: py_venv_${{ inputs.python_version }}_${{ github.sha }}
      run: |
        rm -rf "$venv_name"
        
        echo "$input_python_version" > "$GITHUB_WORKSPACE/.python-version"
        
        python -m venv "$venv_name"
        
        echo "$GITHUB_WORKSPACE/$venv_name/bin" >> $GITHUB_PATH
        
        PY_PATH="$GITHUB_WORKSPACE/$venv_name/bin/python"
        PY_VERSION=$(python --version)
        echo "python_path=$PY_PATH" >> $GITHUB_OUTPUT
        echo "python_version=$PY_VERSION" >> $GITHUB_OUTPUT

    - name: Display Python Setup
      run: |
        set -x
        which python
        which pip
        python --version
        pip --version
        set +x
