name: Build Catalyst Wheel on Linux (arm64)

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - labeled
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  MACOSX_DEPLOYMENT_TARGET: 14.0

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check_if_wheel_build_required:
    uses: ./.github/workflows/check-for-wheel-build.yml

  constants:
    needs: [check_if_wheel_build_required]
    if: needs.check_if_wheel_build_required.outputs.build-wheels == 'true'
    name: "Set build matrix"
    uses: ./.github/workflows/constants.yaml

  build-dependencies:
    needs: [constants, check_if_wheel_build_required]

    strategy:
      fail-fast: false
      matrix:
        python_version: [3.9]
        python_subversion: [19]
        container_img: ["quay.io/pypa/manylinux_2_28_aarch64"]
        container_name: ["manylinux_2_28_aarch64"]

    name: Build Dependencies (Python ${{ matrix.python_version }})
    runs-on:
      group: 'Office 24th floor M2 Mac'

    if: needs.check_if_wheel_build_required.outputs.build-wheels == 'true'

    continue-on-error: true

    steps:
    - name: Checkout Catalyst repo
      uses: actions/checkout@v4

    - name: Setup Runner Environment
      id: setup_env
      uses: ./.github/workflows/utils/setup_self_hosted_macos_env
      with:
        python_version: ${{ matrix.python_version }}

    - name: Setup Colima VM
      run: |
        set -x
        colima stop
        colima start --cpu 4 --memory 16

    # Cache external project sources
    - name: Cache LLVM Source
      id: cache-llvm-source
      uses: actions/cache@v4
      with:
        path:  mlir/llvm-project
        key: ${{ runner.os }}-${{ matrix.container_name }}-llvm-${{ needs.constants.outputs.llvm_version }}-generic-source
        enableCrossOsArchive: True

    - name: Cache MHLO Source
      id: cache-mhlo-source
      uses: actions/cache@v4
      with:
        path: mlir/mlir-hlo
        key: ${{ runner.os }}-${{ matrix.container_name }}-mhlo-${{ needs.constants.outputs.mhlo_version }}-generic-source
        enableCrossOsArchive: True
        
    - name: Cache Enzyme Source
      id: cache-enzyme-source
      uses: actions/cache@v4
      with:
        path:  mlir/Enzyme
        key: ${{ runner.os }}-${{ matrix.container_name }}-enzyme-${{ needs.constants.outputs.enzyme_version }}-generic-source
        enableCrossOsArchive: True

    - name: Clone LLVM Submodule
      if: steps.cache-llvm-source.outputs.cache-hit != 'true'
      uses: actions/checkout@v4
      with:
        repository: llvm/llvm-project
        ref: ${{ needs.constants.outputs.llvm_version }}
        path: mlir/llvm-project

    - name: Clone MHLO Submodule
      if: steps.cache-mhlo-source.outputs.cache-hit != 'true'
      uses: actions/checkout@v4
      with:
        repository: tensorflow/mlir-hlo
        ref: ${{ needs.constants.outputs.mhlo_version }}
        path: mlir/mlir-hlo

    - name: Clone Enzyme Submodule
      if: steps.cache-enzyme-source.outputs.cache-hit != 'true'
      uses: actions/checkout@v4
      with:
        repository: EnzymeAD/Enzyme
        ref: ${{ needs.constants.outputs.enzyme_version }}
        path: mlir/Enzyme

    # Cache external project builds
    - name: Cache LLVM Build
      id: cache-llvm-build
      uses: actions/cache@v4
      with:
        path:  llvm-build
        key: ${{ runner.os }}-${{ runner.arch }}-${{ matrix.container_name }}-llvm-${{ needs.constants.outputs.llvm_version }}-${{matrix.python_version}}-generic-build

    - name: Cache MHLO Build
      id: cache-mhlo-build
      uses: actions/cache@v4
      with:
        path:  mhlo-build
        key: ${{ runner.os }}-${{ runner.arch }}-${{ matrix.container_name }}-mhlo-${{ needs.constants.outputs.mhlo_version }}-generic-build

    - name: Cache Enzyme Build
      id: cache-enzyme-build
      uses: actions/cache@v4
      with:
        path: enzyme-build
        key: ${{ runner.os }}-${{ runner.arch }}-${{ matrix.container_name }}-enzyme-${{ needs.constants.outputs.llvm_version }}-${{ needs.constants.outputs.enzyme_version }}-generic-build

    - name: Build LLVM / MLIR
      if: steps.cache-llvm-build.outputs.cache-hit != 'true'
      run: |
        set -x
        # With GCC 13, LLVM fails some tests, then we use GCC 12 instead
        export GCC_VERSION=12
        docker run --platform linux/aarch64 \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v `pwd`:/catalyst \
            -i ${{ matrix.container_img }} \
            bash /catalyst/.github/workflows/scripts/linux_arm64/build_llvm.sh $GCC_VERSION ${{ matrix.python_version }} ${{ matrix.python_subversion }}

    - name: Build MHLO Dialect
      if: steps.cache-mhlo-build.outputs.cache-hit != 'true'
      run: |
        set -x
        export GCC_VERSION=13
        docker run --platform linux/aarch64 \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v `pwd`:/catalyst \
            -i ${{ matrix.container_img }} \
            bash /catalyst/.github/workflows/scripts/linux_arm64/build_mhlo.sh $GCC_VERSION ${{ matrix.python_version }} ${{ matrix.python_subversion }}

    - name: Build Enzyme
      if: steps.cache-enzyme-build.outputs.cache-hit != 'true'
      run: |
        set -x
        export GCC_VERSION=13
        docker run --platform linux/aarch64 \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v `pwd`:/catalyst \
            -i ${{ matrix.container_img }} \
            bash /catalyst/.github/workflows/scripts/linux_arm64/build_enzyme.sh $GCC_VERSION ${{ matrix.python_version }} ${{ matrix.python_subversion }}

  catalyst-linux-wheels-arm64:
    needs: [constants, build-dependencies]
    strategy:
      fail-fast: false
      matrix:
        python_version: [3.9]
        python_subversion: [19]
        container_img: ["quay.io/pypa/manylinux_2_28_aarch64"]
        container_name: ["manylinux_2_28_aarch64"]

    name: Build Wheels (Python ${{ matrix.python_version }})
    runs-on:
      group: 'Office 24th floor M2 Mac'
    
    continue-on-error: true

    steps:
    - name: Checkout Catalyst repo
      uses: actions/checkout@v4

    - name: Setup Runner Environment
      id: setup_env
      uses: ./.github/workflows/utils/setup_self_hosted_macos_env
      with:
        python_version: ${{ matrix.python_version }}

    - name: Setup Colima VM
      run: |
        set -x
        colima stop
        colima start --cpu 4 --memory 16

    - name: Get Cached LLVM Source
      id: cache-llvm-source
      uses: actions/cache@v4
      with:
        path: mlir/llvm-project
        key: ${{ runner.os }}-${{ matrix.container_name }}-llvm-${{ needs.constants.outputs.llvm_version }}-generic-source
        enableCrossOsArchive: True
        fail-on-cache-miss: True

    - name: Get Cached LLVM Build
      id: cache-llvm-build
      uses: actions/cache@v4
      with:
        path:  llvm-build
        key: ${{ runner.os }}-${{ runner.arch }}-${{ matrix.container_name }}-llvm-${{ needs.constants.outputs.llvm_version }}-${{matrix.python_version}}-generic-build
        fail-on-cache-miss: True

    - name: Get Cached MHLO Source
      id: cache-mhlo-source
      uses: actions/cache@v4
      with:
        path: mlir/mlir-hlo
        key: ${{ runner.os }}-${{ matrix.container_name }}-mhlo-${{ needs.constants.outputs.mhlo_version }}-generic-source
        enableCrossOsArchive: True
        fail-on-cache-miss: True

    - name: Get Cached MHLO Build
      id: cache-mhlo-build
      uses: actions/cache@v4
      with:
        path: mhlo-build
        key: ${{ runner.os }}-${{ runner.arch }}-${{ matrix.container_name }}-mhlo-${{ needs.constants.outputs.mhlo_version }}-generic-build
        fail-on-cache-miss: True

    - name: Get Cached Enzyme Source
      id: cache-enzyme-source
      uses: actions/cache@v4
      with:
        path: mlir/Enzyme
        key: ${{ runner.os }}-${{ matrix.container_name }}-enzyme-${{ needs.constants.outputs.enzyme_version }}-generic-source
        fail-on-cache-miss: True

    - name: Get Cached Enzyme Build
      id: cache-enzyme-build
      uses: actions/cache@v4
      with:
        path: enzyme-build
        key: ${{ runner.os }}-${{ runner.arch }}-${{ matrix.container_name }}-enzyme-${{ needs.constants.outputs.llvm_version }}-${{ needs.constants.outputs.enzyme_version }}-generic-build
        fail-on-cache-miss: True

    # Build Catalyst Wheel
    - name: Build Catalyst Wheel
      run: |
        set -x
        export GCC_VERSION=13
        docker run --platform linux/aarch64 \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v `pwd`:/catalyst \
            -i ${{ matrix.container_img }} \
            bash /catalyst/.github/workflows/scripts/linux_arm64/build_catalyst.sh $GCC_VERSION ${{ matrix.python_version }} ${{ matrix.python_subversion }}

    - name: Upload Wheel Artifact
      uses: actions/upload-artifact@v4
      with:
        name: catalyst-linux_arm64-wheel-py-${{ matrix.python_version }}.zip
        path: wheel/
        retention-days: 14

  test-wheels:
    needs: [constants, catalyst-linux-wheels-arm64]
    strategy:
      fail-fast: false
      matrix:
        python_version: [3.9]
        python_subversion: [19]
        python_container_path: ["/usr/bin/python3"]
        container_img: ["quay.io/pypa/manylinux_2_28_aarch64"]

    # To check all wheels for supported python3 versions
    name: Test Wheels (Python ${{ matrix.python_version }}) on Xanadu M2 Mac
    runs-on:
      group: 'Office 24th floor M2 Mac'
    
    continue-on-error: true
    
    steps:
    - name: Checkout Catalyst repo
      uses: actions/checkout@v4

    - name: Setup Runner Environment
      id: setup_env
      uses: ./.github/workflows/utils/setup_self_hosted_macos_env
      with:
        python_version: ${{ matrix.python_version }}
    
    - name: Setup Colima VM
      run: |
        set -x
        colima stop
        colima start --cpu 4 --memory 16

    - name: Download Wheel Artifact
      uses: actions/download-artifact@v4
      with:
        name: catalyst-linux_arm64-wheel-py-${{ matrix.python_version }}.zip
        path: dist
    
    - name: Run Python Pytest Tests
      run: |
        set -x
        export GCC_VERSION=13
        docker run --platform linux/aarch64 \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v `pwd`:/catalyst \
            -i ${{ matrix.container_img }} \
            bash /catalyst/.github/workflows/scripts/linux_arm64/test_wheels.sh $GCC_VERSION ${{ matrix.python_version }} ${{ matrix.python_subversion }}
