name: Set constants

on:
  workflow_call:
    inputs:
      multiple_compilers:
        required: false
        default: false
        type: boolean
      use_release_tag:
        required: false
        default: false
        type: boolean
      runs_on:
        required: false
        default: ubuntu-22.04
        type: string
    outputs:
      llvm_version:
        description: "LLVM version"
        value: ${{ jobs.set-constants.outputs.llvm_version }}
      mhlo_version:
        description: "MHLO version"
        value: ${{ jobs.set-constants.outputs.mhlo_version }}
      enzyme_version:
        description: "Enzyme version"
        value: ${{ jobs.set-constants.outputs.enzyme_version }}
      python_versions:
        description: "List of Python versions"
        value: ${{ jobs.set-constants.outputs.python_versions }}
      primary_python_version:
        description: "Primary Python version for unrelated tests"
        value: ${{ jobs.set-constants.outputs.primary_python_version }}
      rt_backends:
        description: "List of backends."
        value: ${{ jobs.set-constants.outputs.rt_backends }}
      compilers:
        description: "List of compilers to test Catalyst builds with."
        value: ${{ jobs.set-constants.outputs.compilers }}
      c_compiler.gcc:
        value: gcc
      c_compiler.clang:
        value: clang
      cxx_compiler.gcc:
        value: g++
      cxx_compiler.clang:
        value: clang++

jobs:
  set-constants:
    runs-on: ${{ inputs.runs_on }}

    steps:
      - name: Checkout Catalyst repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - if: ${{ inputs.use_release_tag }}
        run: |
          git checkout $(git tag | sort -V | tail -1)

      - name: LLVM version
        id: llvm_version
        run: echo "llvm_version=$(grep llvm .dep-versions | awk -F '=' '{ print $2 }')" >> $GITHUB_OUTPUT

      - name: MHLO version
        id: mhlo_version
        run: echo "mhlo_version=$(grep mhlo .dep-versions | awk -F '=' '{ print $2 }')" >> $GITHUB_OUTPUT

      - name: Enzyme version
        id: enzyme_version
        run: echo "enzyme_version=$(grep enzyme .dep-versions | awk -F '=' '{ print $2 }')" >> $GITHUB_OUTPUT

      - name: Python versions
        id: python_versions
        run: |
          echo 'python_versions=["3.10", "3.11", "3.12"]' >> $GITHUB_OUTPUT

      - name: Primary Python version
        id: primary_python_version
        run: |
          echo 'primary_python_version=3.10' >> $GITHUB_OUTPUT

      - name: Runtime Backend Devices
        id: rt_backends
        run: echo 'rt_backends=["lightning", "lightning-kokkos", "openqasm", "oqc"]' >> $GITHUB_OUTPUT

      - name: Compilers (All)
        id: compilers
        run: |
          # TODO: add Clang after https://github.com/actions/runner-images/issues/8659 is fixed
          if [[ $MULTIPLE ]]; then
            echo 'compilers=["gcc"]' >> $GITHUB_OUTPUT
          else
            echo 'compilers=["gcc"]' >> $GITHUB_OUTPUT
          fi
        env:
          MULTIPLE: ${{ inputs.multiple_compilers }}

    outputs:
      llvm_version: ${{ steps.llvm_version.outputs.llvm_version }}
      mhlo_version: ${{ steps.mhlo_version.outputs.mhlo_version }}
      enzyme_version: ${{ steps.enzyme_version.outputs.enzyme_version }}
      python_versions: ${{ steps.python_versions.outputs.python_versions }}
      primary_python_version: ${{ steps.primary_python_version.outputs.primary_python_version }}
      rt_backends: ${{ steps.rt_backends.outputs.rt_backends }}
      compilers: ${{ steps.compilers.outputs.compilers }}
