name: Check PennyLane/Lightning Compatibility

on:
  workflow_call:
    inputs:
      catalyst:
        required: true
        type: string
      pennylane:
        required: true
        type: string
      lightning:
        required: true
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  constants:
    name: "Set build matrix"
    uses: ./.github/workflows/constants.yaml

  check-config:
    name: Build Configuration
    needs: [constants]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Catalyst repo
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - if: ${{ inputs.catalyst == 'stable' }}
      run: |
        git checkout $(git tag | sort -V | tail -1)

    - name: Install deps
      run: |
        sudo apt-get install -y cmake ninja-build ccache clang lld libomp-dev
        python3 -m pip install -r requirements.txt

    - name: Get Catalyst Build Dependencies (latest)
      uses: actions/cache@v3
      with:
        path: qir-stdlib-build
        key: Linux-qir-stdlib-build
        fail-on-cache-miss: True
    - uses: actions/cache@v3
      with:
        path: mlir/llvm-project
        key: Linux-llvm-${{ needs.constants.outputs.llvm_version }}-default-source
        enableCrossOsArchive: True
        fail-on-cache-miss: True
    - uses: actions/cache@v3
      with:
        path: llvm-build
        key: ${{ runner.os }}-llvm-${{ needs.constants.outputs.llvm_version }}-default-build-opt
        fail-on-cache-miss: True
    - uses: actions/cache@v3
      with:
        path: mhlo-build
        key: ${{ runner.os }}-mhlo-${{ needs.constants.outputs.mhlo_version }}-default-build
        fail-on-cache-miss: True
    - uses: actions/cache@v3
      with:
        path: enzyme-build
        key: ${{ runner.os }}-enzyme-${{ needs.constants.outputs.enzyme_version }}-default-build
        fail-on-cache-miss: True
    - uses: actions/cache@v3
      with:
        path: .ccache
        key: ${{ runner.os }}-ccache-${{ github.run_id }}
        restore-keys: ${{ runner.os }}-ccache-


    - name: Install Catalyst (latest/stable)
      run: |
        CCACHE_DIR="$(pwd)/.ccache" \
        LLVM_BUILD_DIR="$(pwd)/llvm-build" \
        MHLO_BUILD_DIR="$(pwd)/mhlo-build" \
        DIALECTS_BUILD_DIR="$(pwd)/quantum-build" \
        make dialects
        pip install --upgrade .


    - name: Build Lightning Runtime (latest)
      if: ${{ inputs.lightning == 'latest' }}
      run: |
        COMPILER_LAUNCHER="" \
        RT_BUILD_DIR="$(pwd)/runtime-build" \
        QIR_STDLIB_DIR="$(pwd)/qir-stdlib-build" \
        QIR_STDLIB_INCLUDES_DIR="$(pwd)/qir-stdlib-build/include" \
        LIGHTNING_GIT_TAG_VALUE=master \
        make runtime

    - name: Build Lightning Runtime (stable)
      if: ${{ inputs.lightning == 'stable' }}
      run: |
        COMPILER_LAUNCHER="" \
        RT_BUILD_DIR="$(pwd)/runtime-build" \
        QIR_STDLIB_DIR="$(pwd)/qir-stdlib-build" \
        QIR_STDLIB_INCLUDES_DIR="$(pwd)/qir-stdlib-build/include" \
        LIGHTNING_GIT_TAG_VALUE=latest_release \
        make runtime

    - name: Install PennyLane-Lightning (latest)
      if: ${{ inputs.lightning == 'latest' }}
      uses: actions/checkout@v3
      with:
        repository: PennyLaneAI/pennylane-lightning
        path: pennylane-lightning
    - if: ${{ inputs.lightning == 'latest' }}
      run: |
        pip install --upgrade ./pennylane-lightning

    - name: Install PennyLane-Lightning (stable)
      if: ${{ inputs.lightning == 'stable' }}
      run: |
        pip install --upgrade pennylane-lightning

    - name: Install PennyLane (latest)
      if: ${{ inputs.pennylane == 'latest' }}
      uses: actions/checkout@v3
      with:
        repository: PennyLaneAI/pennylane
        path: pennylane
    - if: ${{ inputs.pennylane == 'latest' }}
      run: |
        pip install --upgrade ./pennylane

    - name: Install PennyLane (stable)
      if: ${{ inputs.pennylane == 'stable' }}
      run: |
        pip install --upgrade pennylane


    - name: Add Frontend Dependencies to PATH
      run: |
        echo "$(pwd)/llvm-build/bin" >> $GITHUB_PATH
        echo "$(pwd)/mhlo-build/bin" >> $GITHUB_PATH
        echo "$(pwd)/quantum-build/bin" >> $GITHUB_PATH
        echo "PYTHONPATH=$PYTHONPATH:$(pwd)/quantum-build/python_packages/quantum" >> $GITHUB_ENV
        echo "RUNTIME_LIB_DIR=$(pwd)/runtime-build/lib" >> $GITHUB_ENV
        echo "MLIR_LIB_DIR=$(pwd)/llvm-build/lib" >> $GITHUB_ENV
        echo "ENZYME_LIB_DIR=$(pwd)/enzyme-build/Enzyme" >> $GITHUB_ENV

    - name: Run Frontend Tests
      run: |
        make pytest

    - name: Run Demos
      run: |
        make test-demos
